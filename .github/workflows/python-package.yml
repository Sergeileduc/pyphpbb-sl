# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env: # Or as an environment variable
        HOST: ${{ secrets.HOST }}
        SENDER_NAME: ${{ secrets.SENDER_NAME }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_NAME: ${{ secrets.RECEIVER_NAME }}
        RECEIVER_PASSWORD: ${{ secrets.RECEIVER_PASSWORD }}
      run: |
        pip install -r requirements-test.txt
        pip install .
        pytest --cov-report=xml --cov-report=term --cov=pyphpbb_sl

    - name: Upload coverage reports to Codecov
      env: # Or as an environment variable
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        pip install codecov
        codecov

  clean:
    needs: build

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: clean forum messages sent by the test
      env: # Or as an environment variable
        HOST: ${{ secrets.HOST }}
        SENDER_NAME: ${{ secrets.SENDER_NAME }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_NAME: ${{ secrets.RECEIVER_NAME }}
        RECEIVER_PASSWORD: ${{ secrets.RECEIVER_PASSWORD }}
      run: |
        pip install .
        pip install python-dotenv
        python examples/08-clean-both-accounts-inbox-and-sent.py
